#!/usr/bin/env node
const app = require('../app');
const http = require('http');

let config = {};
try {
  config = require('../config.js'); // eslint-disable-line
} catch (e) { console.log(e); }

const port = parseInt((process.env.PORT || config.port || '3000'), 10);
const server = http.createServer(app);

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string' ? `Pipe ${port}` : `Port ${port}`;

  switch (error.code) {
    case 'EACCES':
      console.error(`${bind} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(`${bind} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string' ? `pipe ${addr}` : `port ${addr.port}`;
  console.log(`Listening on ${bind}`);
}

app.set('port', port);
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);
